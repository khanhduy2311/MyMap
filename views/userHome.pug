extends ../views/layouts/default.pug

block main
  .container.mt-4
    // ===================== FLASH MESSAGE =====================
    if error_msg && error_msg.length > 0
      .alert.alert-danger.alert-dismissible.fade.show(role="alert")
        strong Lỗi!
        | #{error_msg}
        button.btn-close(type="button", data-bs-dismiss="alert")

    if success_msg && success_msg.length > 0
      .alert.alert-success.alert-dismissible.fade.show(role="alert")
        strong Thành công!
        | #{success_msg}
        button.btn-close(type="button", data-bs-dismiss="alert")

    // ===================== HEADER =====================
    .d-flex.justify-content-between.align-items-center.mb-4
      h1.text-primary
        i.fas.fa-user-circle.me-2
        | Xin chào, #{user.name || user.username}!
      a.btn.btn-primary.btn-lg(href="/mindmaps/create")
        i.fas.fa-plus.me-2
        | Tạo Mindmap mới

    // ===================== NAVIGATION TABS =====================
    ul.nav.nav-tabs(id="profileTabs", role="tablist")
      li.nav-item(role="presentation")
        button#info-tab.nav-link.active(data-bs-toggle="tab", data-bs-target="#info", type="button", role="tab") Thông tin cá nhân
      li.nav-item(role="presentation")
        button#mindmaps-tab.nav-link(data-bs-toggle="tab", data-bs-target="#mindmaps", type="button", role="tab") Mindmap của tôi
      li.nav-item(role="presentation")
        button#avatar-tab.nav-link(data-bs-toggle="tab", data-bs-target="#avatar", type="button", role="tab") Thay đổi Avatar
      li.nav-item(role="presentation")
        button#doc-tab.nav-link(data-bs-toggle="tab", data-bs-target="#document", type="button", role="tab") Upload Tài Liệu

    // ===================== TAB CONTENT =====================
    .tab-content#profileTabsContent

      // ===================== TAB 1: THÔNG TIN CÁ NHÂN =====================
      #info.tab-pane.fade.show.active(role="tabpanel")
        .card.border-top-0
          .card-body.text-center
            if user.avatar
              img(src=user.avatar, alt="Avatar", class="rounded-circle shadow mb-3", style="width:150px;height:150px;object-fit:cover;border:3px solid #ddd;cursor:pointer;", onclick="openEditProfileModal()")
            else
              img(src="/images/default-avatar.png", alt="Default Avatar", class="rounded-circle shadow mb-3", style="width:150px;height:150px;object-fit:cover;border:3px solid #ddd;cursor:pointer;", onclick="openEditProfileModal()")
            h3 #{user.name || 'Chưa có tên'}
            p.text-muted
              i.fas.fa-user.me-2
              | @#{user.username || 'Chưa có username'}
            p.text-muted
              i.fas.fa-envelope.me-2
              | #{user.email || 'Chưa có email'}
            p.text-muted
              i.fas.fa-calendar.me-2
              | Tham gia: #{user.createdAt ? new Date(user.createdAt).toLocaleDateString('vi-VN') : 'Không rõ'}

            button.btn.btn-outline-primary.btn-sm.mt-2(onclick="openEditProfileModal()")
              i.fas.fa-edit.me-1
              | Chỉnh sửa thông tin

      // ===================== TAB 2: MINDMAP CỦA TÔI =====================
      #mindmaps.tab-pane.fade(role="tabpanel")
        .card.border-top-0
          .card-body
            if mindmaps && mindmaps.length > 0
              .list-group
                each mindmap in mindmaps
                  a.list-group-item.list-group-item-action.d-flex.justify-content-between.align-items-center(href=`/mindmaps/${mindmap._id}`)
                    span
                      i.fas.fa-diagram-project.me-2
                      | #{mindmap.title}
                    small.text-muted #{mindmap.createdAt ? new Date(mindmap.createdAt).toLocaleDateString('vi-VN') : ''}
            else
              .alert.alert-info.text-center
                i.fas.fa-info-circle.me-2
                | Chưa có mindmap nào.
                a.alert-link(href="/mindmaps/create") Tạo mindmap đầu tiên?

      // ===================== TAB 3: THAY ĐỔI AVATAR =====================
      #avatar.tab-pane.fade(role="tabpanel")
        .card.border-top-0
          .card-body.text-center
            h4.mb-3
              i.fas.fa-user-circle.me-2
              | Cập nhật ảnh đại diện
            form(action="/upload/avatar" method="POST" enctype="multipart/form-data" class="d-flex flex-column align-items-center")
              input#avatarInput(type="file" name="avatar" accept="image/*" class="d-none" required)
              button.btn.btn-outline-secondary.mb-3(type="button", onclick="document.getElementById('avatarInput').click()")
                i.fas.fa-upload.me-2
                | Chọn ảnh mới
              span#fileNameAvatar.text-muted.mb-3 Chưa có file nào được chọn
              img#avatarPreview.rounded-circle.shadow(style="width:150px;height:150px;object-fit:cover;display:none;border:3px solid #ddd;")
              button.btn.btn-primary.mt-4(type="submit")
                i.fas.fa-save.me-2
                | Lưu ảnh đại diện

      // ===================== TAB 4: UPLOAD TÀI LIỆU =====================
      #document.tab-pane.fade(role="tabpanel")
        .card.border-top-0
          .card-body
            h4.mb-3
              i.fas.fa-file-upload.me-2
              | Tải lên tài liệu của bạn
            // ✅ Form KHÔNG còn action để tránh chuyển trang
            form#uploadDocForm(enctype="multipart/form-data")
              .mb-3
                input#documentInput(type="file" name="documentFile" accept=".pdf,.docx" class="d-none" required)
                .input-group
                  button.btn.btn-outline-secondary(type="button", onclick="document.getElementById('documentInput').click()")
                    i.fas.fa-file-upload.me-2
                    | Chọn tài liệu
                  span.form-control
                    span#fileNameDocument.text-muted Chưa có file nào được chọn
              .d-grid
                button.btn.btn-primary(type="submit")
                  i.fas.fa-upload.me-2
                  | Tải lên
            // ✅ Nơi hiển thị kết quả tóm tắt
            #uploadResult.mt-4

  // ===================== MODAL: CHỈNH SỬA THÔNG TIN =====================
  .modal.fade#editProfileModal(tabindex="-1")
    .modal-dialog
      .modal-content
        .modal-header
          h5.modal-title Chỉnh sửa thông tin cá nhân
          button.btn-close(type="button", data-bs-dismiss="modal")
        .modal-body
          form#editProfileForm
            .mb-3
              label.form-label(for="editName") Họ và tên
              input#editName.form-control(type="text", value=user.name || '')
            .mb-3
              label.form-label(for="editUsername") Tên người dùng
              input#editUsername.form-control(type="text", value=user.username || '')
            .mb-3
              label.form-label(for="editEmail") Email (không thể thay đổi)
              input#editEmail.form-control(type="email", value=user.email || '', readonly)
        .modal-footer
          button.btn.btn-secondary(type="button", data-bs-dismiss="modal") Hủy
          button.btn.btn-primary(type="submit", form="editProfileForm") Lưu thay đổi

  // ===================== JAVASCRIPT =====================
  script.
    document.addEventListener('DOMContentLoaded', () => {
      // === Avatar Preview ===
      const avatarInput = document.getElementById('avatarInput');
      const fileNameAvatar = document.getElementById('fileNameAvatar');
      const avatarPreview = document.getElementById('avatarPreview');
      avatarInput?.addEventListener('change', e => {
        const file = e.target.files[0];
        if (file) {
          if (file.size > 5 * 1024 * 1024) {
            alert('File quá lớn! Vui lòng chọn file nhỏ hơn 5MB.');
            avatarInput.value = '';
            avatarPreview.style.display = 'none';
            return;
          }
          fileNameAvatar.textContent = `Đã chọn: ${file.name} (${(file.size / 1024 / 1024).toFixed(2)} MB)`;
          fileNameAvatar.className = 'text-success';
          const reader = new FileReader();
          reader.onload = e => {
            avatarPreview.src = e.target.result;
            avatarPreview.style.display = 'inline-block';
          };
          reader.readAsDataURL(file);
        } else {
          fileNameAvatar.textContent = 'Chưa có file nào được chọn.';
          fileNameAvatar.className = 'text-muted';
          avatarPreview.style.display = 'none';
        }
      });

      // === Document Info ===
      const documentInput = document.getElementById('documentInput');
      const fileNameDocument = document.getElementById('fileNameDocument');
      documentInput?.addEventListener('change', e => {
        const file = e.target.files[0];
        if (file) {
          if (file.size > 10 * 1024 * 1024) {
            alert('File quá lớn! Vui lòng chọn file nhỏ hơn 10MB.');
            documentInput.value = '';
            return;
          }
          const allowed = ['.pdf', '.docx'];
          const ext = '.' + file.name.split('.').pop().toLowerCase();
          if (!allowed.includes(ext)) {
            alert('Chỉ chấp nhận file PDF hoặc DOCX!');
            documentInput.value = '';
            return;
          }
          fileNameDocument.textContent = `Đã chọn: ${file.name} (${(file.size / 1024 / 1024).toFixed(2)} MB)`;
          fileNameDocument.className = 'text-success';
        } else {
          fileNameDocument.textContent = 'Chưa có file nào được chọn.';
          fileNameDocument.className = 'text-muted';
        }
      });

      // === Upload và tóm tắt tài liệu ===
      const uploadForm = document.getElementById('uploadDocForm');
      const resultBox = document.getElementById('uploadResult');
      uploadForm?.addEventListener('submit', async (e) => {
        e.preventDefault();

        const formData = new FormData(uploadForm);
        resultBox.innerHTML = '<p class="text-info mt-3"><i class="fas fa-spinner fa-spin me-2"></i>Đang xử lý, vui lòng chờ...</p>';

        try {
          const res = await fetch('/upload/document', {
            method: 'POST',
            body: formData
          });

          const data = await res.json();

          if (data.success) {
            resultBox.innerHTML = `
              <div class="alert alert-success mt-3">
                <h5><i class="fas fa-check-circle me-2"></i>Kết quả tóm tắt:</h5>
                <p style="white-space:pre-line">${data.summary}</p>
              </div>
            `;
          } else {
            resultBox.innerHTML = `<div class="alert alert-danger mt-3">${data.error}</div>`;
          }
        } catch (err) {
          resultBox.innerHTML = `<div class="alert alert-danger mt-3">Lỗi khi tải lên: ${err.message}</div>`;
        }
      });

      // === Modal chỉnh sửa thông tin ===
      window.openEditProfileModal = () => {
        const modal = new bootstrap.Modal(document.getElementById('editProfileModal'));
        modal.show();
      };

      const editForm = document.getElementById('editProfileForm');
      editForm?.addEventListener('submit', async (e) => {
        e.preventDefault();
        const name = document.getElementById('editName').value.trim();
        const username = document.getElementById('editUsername').value.trim();
        const email = document.getElementById('editEmail').value.trim();
        const userId = "#{user._id}";

        try {
          const res = await fetch('/user/update', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ userId, name, username, email })
          });
          const data = await res.json();
          if (data.success) {
            alert('✅ Cập nhật thông tin thành công!');
            location.reload();
          } else {
            alert('❌ ' + data.message);
          }
        } catch (err) {
          alert('⚠️ Lỗi khi gửi dữ liệu: ' + err.message);
        }
      });
    });
