extends ../views/layouts/default.pug

block styles
  link(rel="stylesheet" href="/css/style-dashboard.css")
  link(rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0&icon_names=scan_delete")




block main
  .dashboard-layout
    aside.dashboard-sidebar
      nav.sidebar-nav
        ul
          li
            a(
              href="/dashboard", 
              title="Danh sách Mindmap",
              class=currentFolder ? '' : 'active' 
            )
              i.bi.bi-list-task
              span Danh sách

          li
            a(href="/dashboard/folder" title="Thư mục")
              i.fas.fa-folder-open 
              span Thư mục

          li
            a(href="/dashboard/trash" title="Thùng rác")
              i.fas.fa-trash
              span Thùng rác
    
        
    main.dashboard-content
      .search-and-title
        h2.content-title(style="margin-bottom: 0;") 
          if currentFolder
            | #{currentFolder.name}
          else
            if mindmaps && mindmaps.length > 0
              | Danh sách dự án
            else 
              | Không có mindmap nào

      //- Lưới Mindmap
      if mindmaps && mindmaps.length > 0
        #mindmapGrid.mindmap-grid
          each mindmap in mindmaps
            .mindmap-card(data-id=`${mindmap._id}`)
              a.card-link(href=`/mindmaps/${mindmap._id}`): .preview-image
              .card-title.card-title-display: a(href=`/mindmaps/${mindmap._id}`) #{mindmap.title}
              .card-title.card-title-edit(style="display: none;")
                form.inline-edit-form
                  input.inline-edit-input(type="text", value=mindmap.title)
              .card-actions
                button.btn-action.btn-edit(type="button" title="Chỉnh sửa tên"): i.fas.fa-pencil-alt
                button.btn-action.btn-move(type="button" title="Di chuyển tới thư mục"): i.fas.fa-folder-plus
                button.btn-action.btn-delete(type="button", data-id=`${mindmap._id}`, title="Xóa mindmap"): i.fas.fa-trash-alt

        //- BỘ ĐIỀU KHIỂN PHÂN TRANG
        if totalPages > 1
          nav.pagination-controls(aria-label="Điều hướng trang")
            a.btn.btn-outline-secondary(
              href=`?page=${currentPage - 1}&search=${searchQuery || ''}`, 
              disabled=currentPage <= 1
            )
              .edit-font-blah-blah
                i.fas.fa-arrow-left.ms-2
                |  Trang trước
                

            span.page-info Trang #{currentPage} / #{totalPages}

            a.btn.btn-outline-secondary(
              href=`?page=${currentPage + 1}&search=${searchQuery || ''}`, 
              disabled=currentPage >= totalPages
            ) 
              .edit-font-blah-blah
                | Trang sau
                i.fas.fa-arrow-right.ms-2

      else if searchQuery
        .empty-dashboard-container
          i.bi.bi-search.blank-folder(style="font-size: 8rem; color: #aaa;")
          h2.empty-title Không tìm thấy kết quả
          h2.sub-empty-title Không có mindmap nào khớp với từ khóa "#{searchQuery}".

      else
        .empty-dashboard-container
          if currentFolder
            i.bi.bi-folder-x.blank-folder
          else
            span.material-symbols-outlined.blank_folder scan_delete
          h2.empty-title 
            if currentFolder
              | Thư mục này trống
            else
              | Trang chủ của bạn hiện tại đang trống
          h2.sub-empty-title
            if currentFolder
              | Bạn có thể tạo mindmap mới hoặc di chuyển mindmap có sẵn vào đây.
            else
              | Cùng bắt đầu với mindmap đầu tiên của bạn bằng cách đi vào dấu cộng nhé!

  //- Nút tạo mới (giữ nguyên)
  .create-new-container
    .fab-options
      svg.fab-lines(width="40" height="60" viewbox="0 0 40 60")
        path(d="M 5 30 Q 20 30 35 15")
        path(d="M 5 30 Q 20 30 35 45")
      .fab-options-list
        a.fab-option-item(href="#"): span Tạo mindmap trống
        a.fab-option-item(href="/upload/page"): span Upload tài liệu
    button.main-fab-btn(type="button"): i.fas.fa-plus

  //- MODAL "DI CHUYỂN TỚI THƯ MỤC"
  #moveFolderModal.modal.fade(tabindex="-1")
    .modal-dialog
      .modal-content
        .modal-header
          h5.modal-title Di chuyển mindmap
          button.btn-close(type="button" data-bs-dismiss="modal")
        .modal-body
          p Chọn thư mục bạn muốn di chuyển tới:
          #folderTargetList.list-group
            button.list-group-item.list-group-item-action.list-group-item-primary(
              type="button", 
              data-folder-id="root" 
            )
              i.fas.fa-home.me-2
              | TRANG CHỦ 
            if folders && folders.length > 0
              each folder in folders
                button.list-group-item.list-group-item-action(
                  type="button", 
                  data-folder-id=folder._id
                ) #{folder.name}
        .modal-footer
          button.btn.btn-secondary(type="button" data-bs-dismiss="modal") Hủy



  //- === THÊM MODAL MỚI ĐỂ TẠO THƯ MỤC ===
  #createFolderModal.modal.fade(tabindex="-1")
    .modal-dialog.modal-dialog-centered
      .modal-content
        form#createFolderForm
          .modal-header
            //- 1. Thêm "mx-auto" (margin auto) để đẩy tiêu đề vào giữa
            //-    và đẩy nút "x" (btn-close) ra góc phải
            h5.modal-title Tạo thư mục mới
            button.btn-close(type="button" data-bs-dismiss="modal")

          .modal-body
            //- 2. Cấu trúc label + input này sẽ tự động căn "Tên thư mục:"
            //-    ra lề trái, thẳng hàng với ô input bên dưới (đúng ý bạn)
            label.form-label(for="newFolderNameInput") Tên thư mục:
            input#newFolderNameInput.form-control(
              type="text", 
              name="folderName", 
              placeholder="Ví dụ: Pháp luật đại cương...", 
              required,
              autocomplete="off"
            )
          .modal-footer
            //- 3. Xóa nút "Hủy bỏ" và chỉ giữ lại nút "Xác nhận"
            button.btn.btn-primary(type="submit") Xác nhận

block scripts
  //- Script cho modal xóa, sửa tên VÀ di chuyển thư mục
  script.
    document.addEventListener('DOMContentLoaded', () => {
      // Đợi một nhịp để đảm bảo toàn bộ DOM (kể cả Pug render động) đã sẵn sàng
      setTimeout(() => {
        const mindmapGrid = document.getElementById('mindmapGrid');
        if (!mindmapGrid) return;

        // 1️⃣ HÀM MODAL XÁC NHẬN XÓA
        function showConfirmModal(title, message, confirmText = 'Đưa vào thùng rác') {
          const modal = document.getElementById('confirmModal');
          document.getElementById('modalTitle').textContent = title;
          document.getElementById('modalMessage').textContent = message;
          
          const deleteBtn = document.getElementById('confirmDeleteBtn');
          deleteBtn.textContent = confirmText;
          modal.classList.add('show');

          return new Promise((resolve) => {
            const cancelBtn = document.getElementById('confirmCancelBtn');
            const deleteBtn = document.getElementById('confirmDeleteBtn');

            cancelBtn.addEventListener(
              'click',
              () => {
                modal.classList.remove('show');
                resolve(false);
              },
              { once: true }
            );

            deleteBtn.addEventListener(
              'click',
              () => {
                modal.classList.remove('show');
                resolve(true);
              },
              { once: true }
            );
          });
        }

        // 2️⃣ LOGIC CHO MODAL DI CHUYỂN
        const moveModalElement = document.getElementById('moveFolderModal');
        const moveModal = moveModalElement ? new bootstrap.Modal(moveModalElement) : null;
        const folderTargetList = document.getElementById('folderTargetList');
        let mindmapToMoveId = null;

        // 3️⃣ SỰ KIỆN CLICK TRÊN GRID
        mindmapGrid.addEventListener('click', async (event) => {
          const target = event.target;
          const mindmapCard = target.closest('.mindmap-card');
          if (!mindmapCard) return;

          // --- NÚT MOVE ---
          if (target.closest('.btn-move')) {
            mindmapToMoveId = mindmapCard.dataset.id;
            if (moveModal) moveModal.show();
            return;
          }

          // --- NÚT DELETE ---
          if (target.closest('.btn-delete')) {
            const mindmapId = mindmapCard.dataset.id;
            const userConfirmed = await showConfirmModal(
              'Đưa mindmap vào thùng rác?',
              'Bạn có thể khôi phục mục này trong vòng 30 ngày.'
            );

            if (userConfirmed) {
              fetch(`/mindmaps/${mindmapId}`, { method: 'DELETE' })
                .then((res) => res.json())
                .then((data) => {
                  if (data.success) {
                    mindmapCard.remove();
                    showToast('Đã đưa mindmap vào thùng rác.', 'Thành công', 'success');
                  } else {
                    showToast('Lỗi: ' + data.message, 'Thất bại', 'error');
                  }
                })
                .catch(() => showToast('Lỗi kết nối.', 'Lỗi', 'error'));
            }
            return;
          }

          // --- NÚT EDIT ---
          if (target.closest('.btn-edit')) {
            mindmapCard.classList.add('is-editing');
            const displayView = mindmapCard.querySelector('.card-title-display');
            const editView = mindmapCard.querySelector('.card-title-edit');
            const input = editView.querySelector('input');
            displayView.style.display = 'none';
            editView.style.display = 'block';
            input.focus();
            input.select();
          }
        });

        // 4️⃣ SUBMIT FORM EDIT TÊN
        mindmapGrid.addEventListener('submit', async (event) => {
          if (!event.target.classList.contains('inline-edit-form')) return;
          event.preventDefault();

          const form = event.target;
          const mindmapCard = form.closest('.mindmap-card');
          const mindmapId = mindmapCard.dataset.id;
          const input = form.querySelector('input');
          const newTitle = input.value.trim();

          try {
            const res = await fetch(`/mindmaps/${mindmapId}`, {
              method: 'PATCH',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ title: newTitle }),
            });
            const data = await res.json();
            if (data.success) {
              const displayView = mindmapCard.querySelector('.card-title-display');
              const editView = mindmapCard.querySelector('.card-title-edit');
              displayView.querySelector('a').textContent = data.newTitle;
              editView.style.display = 'none';
              displayView.style.display = 'block';
              mindmapCard.classList.remove('is-editing');
              showToast('Đã đổi tên mindmap thành công!', 'Thành công', 'success');
            } else {
              showToast('Lỗi: ' + data.message, 'Thất bại', 'error');
              mindmapCard.classList.remove('is-editing');
            }
          } catch {
            showToast('Lỗi kết nối.', 'Lỗi', 'error');
          }
        });

        // 5️⃣ CLICK CHỌN THƯ MỤC TRONG MODAL
        if (folderTargetList) {
          folderTargetList.addEventListener('click', (event) => {
            const targetFolder = event.target.closest('button[data-folder-id]');
            if (!targetFolder || !mindmapToMoveId) return;

            const folderId = targetFolder.dataset.folderId;
            const mindmapCard = mindmapGrid.querySelector(
              `.mindmap-card[data-id="${mindmapToMoveId}"]`
            );

            fetch(`/dashboard/mindmaps/${mindmapToMoveId}/move`, {
              method: 'PATCH',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ folderId }),
            })
              .then((res) => res.json())
              .then((data) => {
                if (data.success) {
                  mindmapCard.remove();
                  if (moveModal) moveModal.hide();
                  showToast('Đã di chuyển mindmap thành công!', 'Thành công', 'success');
                } else {
                  showToast(data.message || 'Lỗi không xác định.', 'Lỗi di chuyển', 'error');
                }
              })
              .catch(() => showToast('Lỗi kết nối.', 'Lỗi', 'error'));
          });
        }

        // 6️⃣ LOGIC CHO MODAL TẠO THƯ MỤC
        const createFolderModalEl = document.getElementById('createFolderModal');
        const createFolderForm = document.getElementById('createFolderForm');
        const newFolderNameInput = document.getElementById('newFolderNameInput');

        if (createFolderModalEl && createFolderForm && newFolderNameInput) {
          const createFolderModal = new bootstrap.Modal(createFolderModalEl);

          createFolderForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const folderName = newFolderNameInput.value.trim();
            if (!folderName) {
              showToast('Tên thư mục không được để trống.', 'Cảnh báo', 'error');
              return;
            }

            try {
              const response = await fetch('/dashboard/folders', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ folderName }),
              });

              if (response.ok) {
                createFolderModal.hide();
                window.location.reload();
              } else {
                showToast('Lỗi khi tạo thư mục. Vui lòng thử lại.', 'Thất bại', 'error');
              }
            } catch (err) {
              showToast('Lỗi kết nối: ' + err.message, 'Lỗi', 'error');
            }
          });

          createFolderModalEl.addEventListener('hidden.bs.modal', () => {
            newFolderNameInput.value = '';
          });
        }
      }, 0);
    });
