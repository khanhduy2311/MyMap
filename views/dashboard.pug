extends ../views/layouts/default.pug

block styles
  link(rel="stylesheet", href="/css/style-dashboard.css")

block main
  .dashboard-layout
    aside.dashboard-sidebar
      nav.sidebar-nav
        ul
          li
            a.active(href="/dashboard", title="Danh sách Mindmap")
              i.fas.fa-folder-open
              span Danh sách
          li
            a(href="/dashboard/trash", title="Thùng rác")
              i.fas.fa-trash
              span Thùng rác

    main.dashboard-content
      if mindmaps && mindmaps.length > 0
        h2.content-title Tất cả dự án
        #mindmapGrid.mindmap-grid
          each mindmap in mindmaps
            .mindmap-card(data-id=`${mindmap._id}`)
              a.card-link(href=`/mindmaps/${mindmap._id}`): .preview-image
              .card-title.card-title-display: a(href=`/mindmaps/${mindmap._id}`) #{mindmap.title}
              .card-title.card-title-edit(style="display: none;")
                form.inline-edit-form
                  input.inline-edit-input(type="text", value=mindmap.title)
              .card-actions
                button.btn-action.btn-edit(type="button", title="Chỉnh sửa tên"): i.fas.fa-pencil-alt
                button.btn-action.btn-delete(type="button", data-id=`${mindmap._id}`, title="Xóa mindmap"): i.fas.fa-trash-alt
      else
        .empty-dashboard-container
          i.bi.bi-folder-x.blank-folder
          h2.empty-title Chưa có mindmap nào
          h2.sub-empty-title Cùng bắt đầu với mindmap đầu tiên của bạn nhé!
          .fab-helper-arrow
            svg.helper-arrow(width="80", height="80", viewbox="0 0 80 80")
              path(d="M 75 5 C 40 10, 40 60, 5 75", stroke-width="2", fill="none")
          .fab-helper-text
            p.helper-text Hãy bắt đầu sáng tạo bằng cách đi vào biểu tượng dấu cộng

  //- Nút tạo mới mindmap
  .create-new-container
    .fab-options
      svg.fab-lines(width="40" height="60" viewbox="0 0 40 60")
        path(d="M 5 30 Q 20 30 35 15")
        path(d="M 5 30 Q 20 30 35 45")
      .fab-options-list
        a.fab-option-item(href="#"): span Tạo mindmap trống
        a.fab-option-item(href="/upload/page"): span Upload tài liệu
    
    button.main-fab-btn(type="button"): i.fas.fa-plus

  
block scripts
  script.
    document.addEventListener('DOMContentLoaded', () => {
      const mindmapGrid = document.getElementById('mindmapGrid');

      //- Hiển thị modal xác nhận 
      function showConfirmModal(title, message) {
        const modal = document.getElementById('confirmModal');
        document.getElementById('modalTitle').textContent = title;
        document.getElementById('modalMessage').textContent = message;
        modal.classList.add('show');

        return new Promise((resolve) => {
          const cancelBtn = document.getElementById('confirmCancelBtn');
          const deleteBtn = document.getElementById('confirmDeleteBtn');

          function handleCancel() {
            modal.classList.remove('show');
            resolve(false);
          }
          
          function handleConfirm() {
            modal.classList.remove('show');
            resolve(true);
          }

          cancelBtn.addEventListener('click', handleCancel, { once: true });
          deleteBtn.addEventListener('click', handleConfirm, { once: true });
        });
      }

      mindmapGrid.addEventListener('click', async (event) => { // <-- Thêm "async"
        const target = event.target;
        const mindmapCard = target.closest('.mindmap-card');
        if (!mindmapCard) return;

        // Xử lý nút xóa
        if (target.closest('.btn-delete')) {
          const mindmapId = mindmapCard.dataset.id;

          // === THAY THẾ confirm() BẰNG MODAL MỚI ===
          const userConfirmed = await showConfirmModal(
            'Đưa mindmap vào thùng rác?', 
            'Bạn có thể khôi phục mục này trong vòng 30 ngày.'
          );

          if (userConfirmed) {
            fetch(`/mindmaps/${mindmapId}`, { method: 'DELETE' })
            .then(res => res.json())
            .then(data => {
              if (data.success) {
                mindmapCard.remove();
              } else {
                alert('Lỗi: ' + data.message);
              }
            })
            .catch(err => alert('Lỗi kết nối.'));
          }
        } 
        // Xử lý nút edit
        else if (target.closest('.btn-edit')) {
          mindmapCard.classList.add('is-editing');
          const displayView = mindmapCard.querySelector('.card-title-display');
          const editView = mindmapCard.querySelector('.card-title-edit');
          const input = editView.querySelector('input');

          displayView.style.display = 'none';
          editView.style.display = 'block';
          input.focus();
          input.select();
        } 
        // Xử lý nút hủy (đã được thêm lại)
        else if (target.closest('.inline-edit-cancel')) {
          const displayView = mindmapCard.querySelector('.card-title-display');
          const editView = mindmapCard.querySelector('.card-title-edit');
          const input = editView.querySelector('input');

          input.value = displayView.querySelector('a').textContent;
          editView.style.display = 'none';
          displayView.style.display = 'block';
          mindmapCard.classList.remove('is-editing');
        }
      });


      // Xử lý submit form edit (vẫn hoạt động khi nhấn Enter)
      mindmapGrid.addEventListener('submit', async (event) => {
        if (!event.target.classList.contains('inline-edit-form')) return;
        
        event.preventDefault();
        const form = event.target;
        const mindmapCard = form.closest('.mindmap-card');
        const mindmapId = mindmapCard.dataset.id;
        const input = form.querySelector('input');
        const newTitle = input.value.trim();

        try {
          const res = await fetch(`/mindmaps/${mindmapId}`, {
            method: 'PATCH',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ title: newTitle })
          });
          const data = await res.json();
          
          if (data.success) {
            const displayView = mindmapCard.querySelector('.card-title-display');
            const editView = mindmapCard.querySelector('.card-title-edit');
            
            displayView.querySelector('a').textContent = data.newTitle;
            editView.style.display = 'none';
            displayView.style.display = 'block';
            mindmapCard.classList.remove('is-editing');
          } else {
            alert('Lỗi: ' + data.message);
            mindmapCard.classList.remove('is-editing');
          }
        } catch (err) {
          alert('Lỗi kết nối.');
        }
      });
    });

